// Code generated by "stringer -type=Token"; DO NOT EDIT.

package token

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[EOF-0]
	_ = x[EOL-1]
	_ = x[Comment-2]
	_ = x[Begin-3]
	_ = x[TapeFwd-4]
	_ = x[TapeRwd-5]
	_ = x[ByteInc-6]
	_ = x[ByteDec-7]
	_ = x[ByteRead-8]
	_ = x[ByteWrite-9]
	_ = x[LoopBegin-10]
	_ = x[LoopEnd-11]
}

const _Token_name = "EOFEOLCommentBeginTapeFwdTapeRwdByteIncByteDecByteReadByteWriteLoopBeginLoopEnd"

var _Token_index = [...]uint8{0, 3, 6, 13, 18, 25, 32, 39, 46, 54, 63, 72, 79}

func (i Token) String() string {
	if i < 0 || i >= Token(len(_Token_index)-1) {
		return "Token(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Token_name[_Token_index[i]:_Token_index[i+1]]
}
